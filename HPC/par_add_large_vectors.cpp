//How to add two largest vectors by Parallel execution

#include<stdio.h>
#include<iostream>
#include<cstdlib>
//****important to add following library to allow a programmer to use parallel paradigms*****
#include<omp.h>	
using namespace std;
#define MAX 100
int main()
{
int a[MAX],b[MAX],c[MAX],i;
printf("\n First Vector:\t");

//Instruct a master thread to fork and generate more threads to process following loop structure
#pragma omp parallel for
for(i=0;i<MAX;i++)
	{
		a[i]=rand()%1000;
	}

//Discuss issue of this for loop below-if we make it parallel, possibly values that get printed will not be in sequence as we dont have any control on order of threads execution
for(i=0;i<MAX;i++)
	{
		printf("%d\t",a[i]);
	}

printf("\n Second Vector:\t");


#pragma omp parallel for
for(i=0;i<MAX;i++)
	{
		b[i]=rand()%1000;
	}

for(i=0;i<MAX;i++)
	{
		printf("%d\t",b[i]);
	}

printf("\n Parallel-Vector Addition:(a,b,c)\t");



#pragma omp parallel for
for(i=0;i<MAX;i++)
	{
		c[i]=a[i]+b[i];
	}

for(i=0;i<MAX;i++)
	{
		printf("\n%d\t%d\t%d",a[i],b[i],c[i]);
	}
}



/*

studen@student-ThinkCentre-M72e:~/HPC$ ./a.out

 First Vector:	567	782	123	67	135	929	802	22	58	69	167	393	456	11	42	229	373	421	919	784	537	198	324	315	370	413	526	91	980	956	873	862	170	996	281	305	925	84	327	336	505	846	729	313	857	124	895	582	545	814	367	434	364	43	750	87	808	276	178	788	584	403	651	754	399	932	60	676	368	739	12	226	586	94	539	383	886	777	915	793	335	386	492	649	421	362	27	690	59	763	926	540	426	172	736	211	368	429	530	862	
 Second Vector:	771	481	675	709	927	567	856	497	353	586	965	306	683	219	624	528	871	732	829	503	19	270	368	708	715	795	570	434	378	467	601	97	902	317	492	652	756	301	280	286	441	865	689	444	619	440	729	31	117	97	491	227	365	859	936	432	551	437	228	275	407	474	121	858	395	29	237	235	793	818	428	143	11	928	529	340	149	796	723	618	245	846	451	921	555	379	488	764	228	841	350	193	500	34	764	124	914	987	856	743	
 Parallel-Vector Addition:(a,b,c)	
567	771	1338
782	481	1263
123	675	798
67	709	776
135	927	1062
929	567	1496
802	856	1658
22	497	519
58	353	411
69	586	655
167	965	1132
393	306	699
456	683	1139
11	219	230
42	624	666
229	528	757
373	871	1244
421	732	1153
919	829	1748
784	503	1287
537	19	556
198	270	468
324	368	692
315	708	1023
370	715	1085
413	795	1208
526	570	1096
91	434	525
980	378	1358
956	467	1423
873	601	1474
862	97	959
170	902	1072
996	317	1313
281	492	773
305	652	957
925	756	1681
84	301	385
327	280	607
336	286	622
505	441	946
846	865	1711
729	689	1418
313	444	757
857	619	1476
124	440	564
895	729	1624
582	31	613
545	117	662
814	97	911
367	491	858
434	227	661
364	365	729
43	859	902
750	936	1686
87	432	519
808	551	1359
276	437	713
178	228	406
788	275	1063
584	407	991
403	474	877
651	121	772
754	858	1612
399	395	794
932	29	961
60	237	297
676	235	911
368	793	1161
739	818	1557
12	428	440
226	143	369
586	11	597
94	928	1022
539	529	1068
383	340	723
886	149	1035
777	796	1573
915	723	1638
793	618	1411
335	245	580
386	846	1232
492	451	943
649	921	1570
421	555	976
362	379	741
27	488	515
690	764	1454
59	228	287
763	841	1604
926	350	1276
540	193	733
426	500	926
172	34	206
736	764	1500
211	124	335
368	914	1282
429	987	1416
530	856	1386
862	743	1605studen@student-ThinkCentre-M72e:~/HPC$ 











*/
